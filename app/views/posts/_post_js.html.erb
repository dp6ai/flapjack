<script>
  $(window).on('load', function(){
    setTimeout(function() {
      $(".post").css({height: 'auto'});
      $container.isotope( 'reLayout' );
    }, 100);
    // alert('hi');
  });

//for websockets
  if (typeof WebSocketRails !== "undefined" && WebSocketRails !== null)
    {
      var dispatcher = new WebSocketRails('localhost:3000/websocket')
    }
  else
    {
      var dispatcher = new Pusher('85afdbcca2eee964c60d')
    }


  <% if @followed_users_ids_in_json %>
      var users = <%=  @followed_users_ids_in_json %>

      function addSocketListenerForUser(id){
        channel = dispatcher.subscribe(id);
        channel.bind('new', function(newPostData){
        tester = $.parseJSON(newPostData)
        appendPost($.parseJSON(newPostData));

        });
      }

      $(users).each(function(){
        user = this.toString();
        addSocketListenerForUser(user);
      })
  <% end %>

function appendPost(post){

        var outer = $("<div id='post-" + post.id + "' class='post post-" + post.type.toLowerCase() + " width2 height2' data-category='" + post.type.toLowerCase() + "' ></div>")
        var outer_body = $("<div id='body-" + post.id + "' class='post-body-" + post.type.toLowerCase() + "'></div>")

        if (post.type.toLowerCase() === "note" )
          { 
            post_body = "<h6 class='note-text'>"+post.body+"</h6>"
          }
        else if (post.type.toLowerCase() === "link" )
          {
            if (post.url.indexOf('google') == 0 )
              { post_body = "<a href='" + post.url + "'><img src='assets/goo.png' ></a>" }
            else if (post.thumbnail != "no_image" )
              {post_body = "<a href='" + post.url + "'><img src=" + post.thumbnail + " class='thumb-img'></a>"}
            else
              {post_body = "<a href='" + post.url + "' class='link-text string-url'>" + post.url + "</a>" }
          }
        else if (post.type.toLowerCase() === "photo" )
          {
          post_body = "<div class='" + post.type.toLowerCase() + "'><img src='" + post.photo_url +"'></div>" 
          }
        else
          {
          post_body = "<div class='" + post.type + "'><a href='" + post.youtube_url + "'>www.youtube.com</a></div>"
          }

        var caption = $("<div id='caption-" + post.id +"' class='caption fade-out' ><h5 class='lead'>" + post.caption + "</h5></div>")
        var comment_overlay = $("<div id='feeder'><div class='multi-comment-overlay'><ul class='unstyled'><li>"+"!!!!COMMENT!!!!!"+"</li></ul></div></div>")

        var single_comment = $("<div class='single-comment-overlay'><div id='comment-" + post.id + "' class = 'post-last-comment' ><form method='post' action='/comments' class='post-comments'><input type='hidden' name='comment[post_id]' value='" + post.id + "'><input type='text' name='comment[body]' placeholder=''><input type='image' value=''></form></div></div>")

        total = $(outer)  .append(  outer_body.append(post_body))  .append(caption).append(comment_overlay).append(single_comment);

        $('#iso-container').isotope( 'insert', total)
}



  channel_comment = dispatcher.subscribe('comment');
      channel_comment.bind('new', function(comment) {
        $("#comment-"+comment.post_id).find('input[type="text"]').attr('placeholder',comment.body)
        $("#comment-"+comment.post_id).find('input[type="text"]').animate({"opacity": "0.15"},"slow").animate({"opacity": "1"},
            "slow")
        
        $('#admin-feeder ul').append("<li><a href=/posts/" + comment.post_id + " data-id=" + comment.post_id + " class='follow-text'>" + comment.body + "</a>" + "|" + "<a href='/follow/comment/" + comment.id + "' class='follow-user'>" + comment.user + "</a></li>");
        $("#post-"+comment.post_id).find('#post-feeder ul').append("<li><a href=/posts/" + comment.post_id + " data-id=" + comment.post_id + " class='follow-text'>" + comment.body + "</a>" + "|" + "<a href='/follow/comment/" + comment.id + "' class='follow-user'>" + comment.user + "</a></li>");
        
        $('#admin-feeder li:first-child').remove()

        //FIX THE LENGTH OF THE LIST FOR A POST
        bodyHeight = $("#post-"+comment.post_id).find('.post-body-photo').height() || $("#post-"+comment.post_id).find('.post-body-link').height() || $("#post-"+comment.post_id).find('.post-body-video').height() || $("#post-"+comment.post_id).find('.post-body-note').height()
        
        currentSizeOfList =  $("#post-"+comment.post_id).find('#post-feeder li').size()
        maxSizeOfList =  Math.round(bodyHeight / 20)

        if ( currentSizeOfList >= maxSizeOfList)
        {
          $("#post-"+comment.post_id).find('#post-feeder li:first-child').remove()
        }

        //FIX THE LENGTH OF THE LIST FOR A POST
        adminListBodyHeight = $('#admin-feeder').height()
        currentSizeOfAdminList = $('#admin-feeder li').size()
        maxSizeOfAdminList =  Math.round(adminListBodyHeight / 20)

        if ( currentSizeOfAdminList >= maxSizeOfAdminList)
        {
          $("#post-"+comment.post_id).find('#post-feeder li:first-child').remove()
        }

        displayPreview();
        followByComment(); 
    });


 //add listener for each feed li element
  function displayPreview(){ 
         $("a.follow-text").on('click', function(event){
          event.preventDefault();
          $.get('/posts/' + this.getAttribute("data-id"), function(data) {
            // console.log(data);
            $('#feeder-post').html(data)
          })

       })
}

      //follow by comment
function followByComment()
{

        $('a.follow-user').on('click', function(event)
        {
              event.preventDefault();
              var address = $(this).attr('href');
              var commentID = $(this).attr('href').split("/").pop();
              // console.log(commentID)
            $.post(address, function(someresponse)
            {
              tester1 = someresponse;
              if(someresponse.already_following != "1"){              //won't add a socket listener or add new posts if already following that user
                    $.get("/follow/user_from_comment/" + commentID, function(response){
                        var user = response.user_id.toString();
                       addSocketListenerForUser(user.toString());      
                        addLastFivePosts(user);
                  })
              }
              
           
            })
        })
}

//for those loaded initially
displayPreview();
followByComment();

function addLastFivePosts(user){
  $.get('/posts/five/' + user, function(response){
      test = response
      $(response).each(function(){
        appendPost(this);
      })
  })

}


//for ajax form submit for creating a new comment
   $('#iso-container form').on('submit',function(event){
    event.preventDefault();
    //console.log(event) 
    form = this
    $.post("/comments", $(this).serialize(), function(){
    $(form).find("input[type='text']").attr('placeholder', '').val('');

    });

   })

 </script>